@using PokeCardManager.Classes
@using PokeCardManager.Classes.Events
@using PokeCardManager.Data
@using Microsoft.JSInterop
@using System.Text.Json

@inherits ComponentBase
@implements IDisposable
@inject UpdateFiltersEvent UpdateFiltersEvent
@inject IJSRuntime JS
@inject NavigationManager Navigation


<div class="card m-0 p-0">
    <div class="card-body">
            @foreach( Filter filter in PC.Filters )
            {
                if (filter.Type == Filter.FilterTypes.SuperTypes)
                {
                    <div class="chip chip-sm bg-supertype text-white">
                        @filter.Value <span class="closebtn" @onclick="eventArgs => { CloseChip(filter.Hash, eventArgs); }">×</span>
                    </div>

                }
                else if (filter.Type == Filter.FilterTypes.SubTypes)
                {

                <div class="chip chip-sm bg-subtype text-white">
                    @filter.Title <span class="closebtn" @onclick="eventArgs => { CloseChip(filter.Hash, eventArgs); }">×</span>
                </div>

                } else if (filter.Type == Filter.FilterTypes.Rarities) {

                <div class="chip chip-sm bg-rarity text-white">
                    <img src="/img/icons/rarity/r-@(filter.GetImage).png" />
                        @filter.Title <span class="closebtn" @onclick="eventArgs => { CloseChip(filter.Hash, eventArgs); }">×</span>
                </div>

                } else if (filter.Type == Filter.FilterTypes.ElementTypes)

                {
                    <div class="chip chip-sm bg-element text-white">
                        @filter.Value <span class="closebtn" @onclick="eventArgs => { CloseChip(filter.Hash, eventArgs); }">×</span>
                    </div>
                }
                else if (filter.Type == Filter.FilterTypes.SetName)

                {
                    <div class="chip chip-sm bg-sets text-white">
                        <img src="/img/icons/sets/@(filter.Value).png" />
                        @filter.Title <span class="closebtn" @onclick="eventArgs => { CloseChip(filter.Hash, eventArgs); }">×</span>
                    </div>
                }
            }
    </div>
</div>


@code {
    private IJSObjectReference module;

    


    protected override void OnInitialized()
    {
        SChanged();

        UpdateFiltersEvent.OnChange += SChanged;
    }


    void CloseChip(int filterHash, MouseEventArgs e)
    {
        UpdateFiltersEvent.RemoveFilter(filterHash);
    }


    public void SChanged()
    {
        StateHasChanged();

        int queryHash = Utils.GetListHashCode(PC.Filters) + PokeAPI.QueryList.GetHashCode() + DateTime.Now.Second;

        Navigation.NavigateTo($"/search/{queryHash}", false, false);


    }


    public void Dispose()
    {
        UpdateFiltersEvent.OnChange -= SChanged;

    }

}